apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge:  {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      env: {{ .Values.env }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        env: {{ .Values.env }}
    spec:
      volumes:
      - name: uaa-secrets
        secret:
          secretName: uaa-secret
          defaultMode: 0444
      - name: log4j2-properties
        configMap:
          name: log4j2-properties
      {{- if .Values.database.sqlProxyEnabled }}
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-proxy-credentials
          defaultMode: 0444
          items:
          - key: "credentials.json"
            path: "credentials.json"
      {{- end }}
      containers:
        {{- if .Values.database.sqlProxyEnabled }}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.16
          command: ["/cloud_sql_proxy",
                    "-instances=$(SQL_INSTANCE_NAME)=tcp:$(DB_PORT)",
                    "-ip_address_types=PRIVATE",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
          env:
          - name: SQL_INSTANCE_NAME
            valueFrom:
              configMapKeyRef:
                name: cloudsql-proxy-config
                key: instance-connection-name
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: db-config
                key: db-port
        {{- end }}
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.name }}
          volumeMounts:
            - name: uaa-secrets
              mountPath: "/uaa"
              readOnly: true
            - name: log4j2-properties
              mountPath: log4j2.properties
          ports:
            - name: http-uaa
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.container.port }}
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.container.port }}
            initialDelaySeconds: 300
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
            - name: SERVER_PORT
              value: {{ .Values.container.port | quote }}
            - name: DB_HOST
              {{- if .Values.database.managedPostgres }}
              valueFrom:
                secretKeyRef:
                  name: db-config
                  key: db-host
              {{- else }}
              value: $(POSTGRES_SERVICE_HOST)
              {{- end }}
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: db-config
                  key: db-port
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-config
                  key: {{ .Values.database.secrets.nameKey }}
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: {{ .Values.database.secrets.usernameKey }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: {{ .Values.database.secrets.passwordKey }}
            - name: security_user_name
              valueFrom:
                secretKeyRef:
                  name: security-credentials
                  key: security-user
            - name: security_user_password
              valueFrom:
                secretKeyRef:
                  name: security-credentials
                  key: security-password
            - name: DATABASE_URL
              {{- if .Values.database.sqlProxyEnabled }}
              value: "jdbc:postgresql://127.0.0.1:$(DB_PORT)/$(DB_NAME)"
              {{- else }}
              value: "jdbc:postgresql://$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable"
              {{- end }}
            - name: CATALINA_OPTS
              value: "-Dspring.profiles.active=postgresql -Dlog4j.configurationFile=file:log4j2.properties"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}