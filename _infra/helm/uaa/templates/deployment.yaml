apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
    replicas: {{ .Values.replicaCount }}
    strategy:
        rollingUpdate:
            maxSurge:  {{ .Values.rollingUpdate.maxSurge }}
            maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
        type: RollingUpdate
    selector:
        matchLabels:
            app: {{ .Chart.Name }}
            env: {{ .Values.env }}
    template:
        metadata:
            labels:
                app: {{ .Chart.Name }}
                env: {{ .Values.env }}
        spec:
            containers:
                - name: {{ .Chart.Name }}
                  image: "{{ .Values.image.name }}/{{ .Chart.Name }}:{{ .Chart.AppVersion }}"
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  ports:
                      - name: http-server
                        containerPort: {{ .Values.container.port }}
                  readinessProbe:
                      httpGet:
                          path: /info
                          port: {{ .Values.container.port }}
                      initialDelaySeconds: 5
                      periodSeconds: 20
                      failureThreshold: 5
                      successThreshold: 1
                      timeoutSeconds: 5
                  livenessProbe:
                      httpGet:
                          path: /info
                          port: {{ .Values.container.port }}
                      initialDelaySeconds: 5
                      periodSeconds: 20
                      failureThreshold: 5
                      successThreshold: 1
                      timeoutSeconds: 5
                  env:
                    - name: SERVER_PORT
                      value: {{ .Values.service.port | quote }}
                    - name: DB_HOST
                      {{- if .Values.database.managedPostgres }}
                      valueFrom:
                        secretKeyRef:
                            name: db-config
                            key: db-host
                      {{- else }}
                      value: $(POSTGRES_SERVICE_HOST)
                      {{- end }}
                    - name: DB_PORT
                      valueFrom:
                          secretKeyRef:
                              name: db-config
                              key: db-port
                    - name: DB_NAME
                      valueFrom:
                          secretKeyRef:
                              name: db-config
                              key: db-name
                    - name: DATABASE_USERNAME
                      valueFrom:
                          secretKeyRef:
                              name: db-credentials
                              key: username
                    - name: DATABASE_PASSWORD
                      valueFrom:
                          secretKeyRef:
                              name: db-credentials
                              key: password
                    - name: security_user_name
                      valueFrom:
                          secretKeyRef:
                              name: security-credentials
                              key: security-user
                    - name: security_user_password
                      valueFrom:
                          secretKeyRef:
                              name: security-credentials
                              key: security-password
                    - name: DATABASE_URL
                      value: "jdbc:postgresql://$(DB_HOST):$(DB_PORT)/$(DB_NAME)"
                    - name: CATALINA_OPTS
                      value: "-Dspring.profiles.active=postgresql"
                  resources:
{{ toYaml .Values.resources | indent 12 }}
